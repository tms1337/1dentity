/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Chapter: { // root type
    id?: string | null; // String
    title: string; // String!
  }
  Course: { // root type
    id?: string | null; // String
    imgUrl: string; // String!
    name: string; // String!
  }
  Lesson: { // root type
    assignment?: string | null; // String
    chapterId?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    deadline?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    interactiveCodeGist?: string | null; // String
    interactiveCodeUrl?: string | null; // String
    interactiveSolutionGist?: string | null; // String
    interactiveSolutionUrl?: string | null; // String
    links?: string | null; // String
    title: string; // String!
    videoUrl?: string | null; // String
  }
  Mutation: {};
  Performance: { // root type
    allPoints: number; // Int!
    id?: string | null; // String
    points: number; // Int!
    specialPointsFirst: number; // Int!
    specialPointsSecond: number; // Int!
  }
  Query: {};
  Submission: { // root type
    id: string; // String!
    lessonId: string; // String!
    url: string; // String!
    userId: string; // String!
  }
  User: { // root type
    email?: string | null; // String
    hasPotential?: boolean | null; // Boolean
    id?: string | null; // String
    name?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Chapter: { // field return type
    id: string | null; // String
    lessons: Array<NexusGenRootTypes['Lesson'] | null> | null; // [Lesson]
    title: string; // String!
  }
  Course: { // field return type
    chapters: Array<NexusGenRootTypes['Chapter'] | null> | null; // [Chapter]
    id: string | null; // String
    imgUrl: string; // String!
    name: string; // String!
  }
  Lesson: { // field return type
    assignment: string | null; // String
    chapterId: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    deadline: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    interactiveCodeGist: string | null; // String
    interactiveCodeUrl: string | null; // String
    interactiveSolutionGist: string | null; // String
    interactiveSolutionUrl: string | null; // String
    links: string | null; // String
    submitted: boolean | null; // Boolean
    title: string; // String!
    videoUrl: string | null; // String
    watched: boolean | null; // Boolean
  }
  Mutation: { // field return type
    submitAssignment: NexusGenRootTypes['Submission'] | null; // Submission
    watchLesson: NexusGenRootTypes['User'] | null; // User
  }
  Performance: { // field return type
    allPoints: number; // Int!
    id: string | null; // String
    points: number; // Int!
    specialPointsFirst: number; // Int!
    specialPointsSecond: number; // Int!
  }
  Query: { // field return type
    allmysubs: NexusGenRootTypes['Lesson'][] | null; // [Lesson!]
    course: NexusGenRootTypes['Course'] | null; // Course
    getCourses: Array<NexusGenRootTypes['Course'] | null> | null; // [Course]
    getPerformance: NexusGenRootTypes['Performance']; // Performance!
    lesson: NexusGenRootTypes['Lesson'] | null; // Lesson
    lessons: NexusGenRootTypes['Lesson'][] | null; // [Lesson!]
    mysubmission: NexusGenRootTypes['Submission'] | null; // Submission
  }
  Submission: { // field return type
    id: string; // String!
    lessonId: string; // String!
    url: string; // String!
    userId: string; // String!
  }
  User: { // field return type
    email: string | null; // String
    hasPotential: boolean | null; // Boolean
    id: string | null; // String
    name: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Chapter: { // field return type name
    id: 'String'
    lessons: 'Lesson'
    title: 'String'
  }
  Course: { // field return type name
    chapters: 'Chapter'
    id: 'String'
    imgUrl: 'String'
    name: 'String'
  }
  Lesson: { // field return type name
    assignment: 'String'
    chapterId: 'String'
    createdAt: 'DateTime'
    deadline: 'DateTime'
    id: 'String'
    interactiveCodeGist: 'String'
    interactiveCodeUrl: 'String'
    interactiveSolutionGist: 'String'
    interactiveSolutionUrl: 'String'
    links: 'String'
    submitted: 'Boolean'
    title: 'String'
    videoUrl: 'String'
    watched: 'Boolean'
  }
  Mutation: { // field return type name
    submitAssignment: 'Submission'
    watchLesson: 'User'
  }
  Performance: { // field return type name
    allPoints: 'Int'
    id: 'String'
    points: 'Int'
    specialPointsFirst: 'Int'
    specialPointsSecond: 'Int'
  }
  Query: { // field return type name
    allmysubs: 'Lesson'
    course: 'Course'
    getCourses: 'Course'
    getPerformance: 'Performance'
    lesson: 'Lesson'
    lessons: 'Lesson'
    mysubmission: 'Submission'
  }
  Submission: { // field return type name
    id: 'String'
    lessonId: 'String'
    url: 'String'
    userId: 'String'
  }
  User: { // field return type name
    email: 'String'
    hasPotential: 'Boolean'
    id: 'String'
    name: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    submitAssignment: { // args
      lessonId: string; // String!
      url: string; // String!
    }
    watchLesson: { // args
      lessonId: string; // String!
    }
  }
  Query: {
    course: { // args
      id: string; // String!
    }
    lesson: { // args
      id: string; // String!
    }
    mysubmission: { // args
      lessonId: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}